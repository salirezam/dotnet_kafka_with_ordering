version: '3.0'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
    ports:
      - "2181:2181"
      
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
    # Exposes 29092 for external connections to the broker
    # Use kafka1:9092 for connections internal on the docker network
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "29092:29092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8085"
      
  topic:
    image: confluentinc/cp-kafka
    network_mode: host
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b localhost:29092 1 20 && \
                       echo Kafka is ready, creating topics && \
                       kafka-topics --create --topic collection_account_topic --partitions 10 --replication-factor 1 --if-not-exists --zookeeper localhost:2181 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 2'"
      
  schemaregistry:
    image: confluentinc/cp-schema-registry
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
    ports:
      - 8085:8085
      
      